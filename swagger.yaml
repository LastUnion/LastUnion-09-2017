swagger: '2.0'
info:
  description: |
    This is a server, which proides api for signup, signin user and get information about user.
    Developers LastUnion team.
  version: 1.0.0
  title: LastUnion server
# schemes:
# - https
paths:
  /api/user/signin:
    post:
      tags:
      - uesr
      summary: Sign in user into the server
      description: Sign in user into the server
      operationId: signInUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/signInUserModel'
      responses:
        200:
          description: Successfull operation
          schema:
            $ref: '#/definitions/Ok'
        400:
          description: Contains null fields
          schema:
            $ref: '#/definitions/badRequestJson'
            $ref: '#/definitions/badRequestForm'            
        403:
          description: Invalid login or password
          schema: 
            $ref: '#/definitions/forbidden'
  /api/user/signup:
    post:
      tags:
      - user
      summary: Create user 
      operationId: signUpUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/signUpUserModel'
      responses:
        201:
          description: Successfull signin
          schema:
            $ref: '#/definitions/Ok'
        400:
          description: Json contains null fields
          schema:
            $ref: "#/definitions/badRequestForm",
            $ref: "#/definitions/badRequestJson"
        409:
          description: Login or Email already registered
          schema: 
            $ref: '#/definitions/conflict'
  # /api/user/data:
  #   get:
  #     tags:
  #       -user
  #     summary: Get information about user
  #     operationId: getUserData
  #     produces: 
  #     - application/json
  #     parameters: []
  #     responses:
  #       200:
  #         description: Successfull operation
  #       403:
  #       404:
  # /api/user/change_email:
  #   post:
  #     tags:
  #     - user
  # /api/user/change_password:
  #   post:
  #     tags:
  #       - user
  # /api/user/delete:
  #   delete:
  #     tags:
  #       - user
  # /api/user/logout:
  #   post:
  #     tags:
  #     - user
      
definitions:
  signInUserModel:
    type: object
    properties:
      userName:
        type: string
        format: unique
      userPassword:
        type: string
        format: password
      xml:
        name: signInUserModel
  signUpUserModel:
    type: object
    properties:
      userName:
        type: string
        format: unique
      userEmail:
        type: string
        format: unique
      userPassword:
        type: string
        format: password
    xml:
      name: signUpUserModel
  changeUserEmailModel:
    type: object
    properties:
      userEmail:
        type: string
        format: unique
    xml:
      name: changeUserEmailModel
  changeUserPasswordModel:
    type: object
    properties:
      oldPassword:
        type: string
        format: password
      newPassword:
        type: string
        format: password
    xml:
      name: changeUserPasswordModel
  Ok:
    type: object
    properties:
      result: 
        type: boolean
        example: true
      responseMessage:
        type: string
        example: Ok! en
      data: 
        type: string
        example: null
    xml: 
      name: Ok
  badRequestJson:
    type: object
    properties:
      result: 
        type: boolean
        example: false
      responseMessage:
        type: string
        example: Json contains null fields! en
      data: 
        type: string
        example: null
    xml:
      name: badRequestJson
  badRequestForm:
    type: object
    properties:
      result: 
        type: boolean
        example: false
      responseMessage:
        type: string
        example: Form not valid! en
      data: 
        type: string
        example: null
    xml:
      name: badRequestForm
  forbidden:
    type: object
    properties:
      result: 
        type: boolean
        example: false
      responseMessage:
        type: string
        example: Invalid authentication data! en
      data: 
        type: string
        example: null
    xml: 
      name: forbidden
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /HustonMmmavr/server_api/1.0.0
schemes:
 - https
 - http